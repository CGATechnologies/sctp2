    {% extends "./base" %}

        {% block head %}<link rel="stylesheet" type="text/css" href="/assets/css/info-list.css"/>{% endblock %}

        {% block contextMenu %}
            {% set canModify = hasRole("ADMINISTRATOR") and isSessionOpen %}
            {% set useWideContainer = true %}
        <div class="context-nav-container">
            <div class="level">
                <div class="level-left">
                    <div class="level-item">
                        <a href="{{ returnUrl }}" class="button is-danger">
                            <span class="icon-text">
                                <span class="icon">
                                    <i class="fa fa-chevron-left"></i>
                                </span>
                                <span>Back</span>
                            </span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
        {% endblock %}


    {% block content %}
    <div>
        <div class="card no-overlap">
            <header class="card-header">
                <p class="card-header-title">Enrolled / Household - ML- {{ details.mlCode }}</p>
            </header>
            <div class="card-content">
                <div class="card">
                    <header class="card-header">
                        <p class="card-header-title">General Information</p>
                    </header>
                    <div class="card-content">
                        <div class="columns">
                            <div class="column">
                                <div class="info-list">

                                    <div class="info-row">
                                        <div class="item-label">TA</div>
                                        <div class="item-value">{{ details.taName }}</div>
                                    </div>

                                    <div class="info-row">
                                        <div class="item-label">Village Cluster</div>
                                        <div class="item-value">{{ details.clusterName }}</div>
                                    </div>

                                    <div class="info-row">
                                        <div class="item-label">Pre-Printed Num</div>
                                        <div class="item-value">{{ details.formNumber }}</div>
                                    </div>

                                </div>
                            </div>

                            <div class="column">
                                <div class="info-list">

                                    <div class="info-row">
                                        <div class="item-label">Household Code</div>
                                        <div class="item-value">ML-{{ details.mlCode }}</div>
                                    </div>

                                    <div class="info-row">
                                        <div class="item-label">Household Name</div>
                                        <div class="item-value">{{ details.houseHoldHead }}</div>
                                    </div>

                                    <div class="info-row">
                                        <div class="item-label">National ID Number</div>
                                        <div class="item-value"></div>
                                    </div>

                                </div>
                            </div>

                            <div class="column">
                                <div class="info-list">

                                    <div class="info-row">
                                        <div class="item-label">Total Household Members</div>
                                        <div class="item-value">{{ details.memberCount | numberformat("#,###") }}</div>
                                    </div>

                                    <div class="info-row">
                                        <div class="item-label">Total Children in Primary</div>
                                        <div class="item-value">{{ details.primaryChildre | numberformat("#,###") }}</div>
                                    </div>

                                    <div class="info-row">
                                        <div class="item-label">Total Children in Secondary</div>
                                        <div class="item-value">{{ details.secondaryChildren | numberformat("#,###") }}</div>
                                    </div>

                                </div>
                            </div>

                            <div class="column">
                                <div class="info-list">

                                    <div class="info-row">
                                        <div class="item-label">Total Enrolled Children Age 6-15</div>
                                        <div class="item-value">{{ details.totalChildren }}</div>
                                    </div>



                                </div>
                            </div>


                        </div>
                    </div>
                </div>
                <!--main receiver-->
                <div class="card mt-5">
                    <header class="card-header">
                        <p class="card-header-title">Main Receiver</p>
                    </header>
                    <div class="columns">
                        <div class="column is-5">
                            <div class="card-image">
                                <figure class="image is-4by3">
                                    <img id="main-photo" src="/assets/img/user-svg.svg" alt="Placeholder image" />
                                </figure>
                            </div>
                        </div>
                        <div class="card-content">
                            <div class="columns">
                                <div class="column is-6">
                                    <label class="label">HouseHold Member</label>
                                </div>
                                <div class="column is-12">
                                    <div class="field">
                                        <div class="control">
                                            <div class="select is-fullwidth">
                                                    {{ selectField('mainReceiver', individuals, enrolmentForm.mainReceiver, true) }}
                                            </div>
                                        </div>
                                        {{ printFieldErrors(getFieldErrors('enrolmentForm', 'mainReceiver')) }}
                                    </div>
                                </div>
                            </div>
{#                            <div class="columns">#}
{#                                <div class="column is-6">#}
{#                                    <label class="label">First Name</label>#}
{#                                </div>#}
{#                                <div class="column is-12">#}
{#                                    <div class="field">#}
{#                                        <div class="control">#}
{#                                            <div  class="is-fullwidth">#}
{#                                                    {{ textField('mainFirstName', enrolmentForm.mainFirstName, 1, 100, true, null) }}#}
{#                                            </div>#}
{#                                        </div>#}
{#                                    </div>#}
{#                                </div>#}
{#                            </div>#}
{#                            <div class="columns">#}
{#                                <div class="column is-6">#}
{#                                    <label class="label">Last Name</label>#}
{#                                </div>#}
{#                                <div class="column is-12">#}
{#                                    <div class="field">#}
{#                                        <div class="control">#}
{#                                            <div class="is-fullwidth">#}
{#                                                    {{ textField('mainLastName', enrolmentForm.mainLastName, 1, 100, true, null) }}#}
{#                                            </div>#}
{#                                        </div>#}
{#                                    </div>#}
{#                                </div>#}
{#                            </div>#}
                            <div class="columns">
                                <div class="column is-6">
                                    <label class="label">Gender</label>
                                </div>
                                <div class="column is-12">
                                    <div class="field">
                                        <div class="control">
                                            <div class="select is-fullwidth">
                                                    {{ selectField('mainGender', gender, enrolmentForm.mainGender, true) }}
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="columns">
                                <div class="column is-6">
                                    <label class="label">Date of Birth</label>
                                </div>
                                <div class="column is-12">
                                    <div class="field">
                                        <div class="control">
                                            <div class=" is-fullwidth">
                                                    {{ dateField('mainDOB', enrolmentForm.mainDOB, true) }}
                                            </div>
                                        </div>
                                        {{ printFieldErrors(getFieldErrors('enrolmentForm', 'mainDOB')) }}
                                    </div>
                                </div>
                            </div>
                            <div class="columns">
                                <div class="column is-6">
                                    <label class="label">National ID</label>
                                </div>
                                <div class="column is-6">
                                    <input id="mainNationalId" name="mainNationalId" type="text" minlength="1" maxlength="100" class="input" disabled>
                                </div>
                            </div>
                            <div class="columns">
                                <div class="column">
                                    <button id="modal-btn" class="button is-primary modal-button" data-target="modal" aria-haspopup="true">Take picture</button>
                                </div>
                                <div class="column">
                                    <div class="file">
                                        <label class="file-label">
                                            <input class="file-input" type="file" accept="image/*" name="alt-photo" onchange="loadMainFile(event)">
                                            <span class="file-cta">
                                              <span class="file-icon">
                                                <i class="fas fa-upload"></i>
                                              </span>
                                              <span class="file-label">
                                                Choose a file…
                                              </span>
                                            </span>
                                        </label>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>

                <!--alternative receiver-->
                <div class="card mt-5">
                    <header class="card-header">
                        <p class="card-header-title">
                            <label class="checkbox">
                                <input id="hasAlt" type="checkbox" class="is-large">
                                Alternative Receiver
                            </label>
                        </p>
                    </header>

                    <div id="altCard" class="columns">
                        <div class="column is-5">
                            <div class="card-image">
                                <figure class="image is-4by3">
                                    <img id="alt-photo" src="/assets/img/user-svg.svg" alt="Placeholder image">
                                </figure>
                            </div>
                        </div>
                        <div class="card-content">
                            <div class="control mb-5">
                                <label class="radio">
                                    <input id="householdMemberBtn" type="radio" name="answer" checked onclick="handleClick(this);" value="1">
                                    Household Member
                                </label>
                                <label class="radio">
                                    <input id="nonHouseholdMemberBtn" type="radio" name="non-household" onclick="handleClick(this);" value="2">
                                    Non-Household Member
                                </label>
                            </div>
                            <div id="altMember" class="columns">
                                <div class="column is-6">
                                    <label class="label">Member</label>
                                </div>
                                <div class="column is-12">
                                    <div class="field">
                                        <div class="control">
                                            <div id="altDiv" class="select is-fullwidth">
                                                    {{ selectField('altReceiver', individuals, enrolmentForm.altReceiver, true) }}
                                            </div>
                                        </div>
                                        {{ printFieldErrors(getFieldErrors('enrolmentForm', 'altReceiver')) }}
                                    </div>
                                </div>
                            </div>
                            <div class="columns" id="altFieldFirst">
                                <div class="column is-6">
                                    <label class="label">First Name</label>
                                </div>
                                <div class="column is-12">
                                    <div class="field">
                                        <div class="control">
                                            <div id="altDiv" class="is-fullwidth">
                                                    {{ textField('altFirstName', enrolmentForm.altFirstName, 1, 100, true, null) }}
                                            </div>
                                        </div>
                                        {{ printFieldErrors(getFieldErrors('enrolmentForm', 'altReceiver')) }}
                                    </div>
                                </div>
                            </div>
                            <div class="columns" id="altFieldLast">
                                <div class="column is-6">
                                    <label class="label">Last Name</label>
                                </div>
                                <div class="column is-12">
                                    <div class="field">
                                        <div class="control">
                                            <div id="altDiv" class="is-fullwidth">
                                                    {{ textField('altLastName', enrolmentForm.altLastName, 1, 100, true, null) }}
                                            </div>
                                        </div>
                                        {{ printFieldErrors(getFieldErrors('enrolmentForm', 'altReceiver')) }}
                                    </div>
                                </div>
                            </div>
                            <div class="columns">
                                <div class="column is-6">
                                    <label class="label">Gender</label>
                                </div>
                                <div class="column is-12">
                                    <div class="field">
                                        <div class="control">
                                            <div class="select is-fullwidth">
                                                    {{ selectField('altGender', gender, enrolmentForm.altGender, true) }}
                                            </div>
                                        </div>
                                        {{ printFieldErrors(getFieldErrors('enrolmentForm', 'altGender')) }}
                                    </div>
                                </div>
                            </div>
                            <div class="columns">
                                <div class="column is-6">
                                    <label class="label">Date of Birth</label>
                                </div>
                                <div class="column is-12">
                                    <div class="field">
                                        <div class="control">
                                            <div class=" is-fullwidth">
                                                    {{ dateField('altDOB', enrolmentForm.altDOB, true) }}
                                            </div>
                                        </div>
                                        {{ printFieldErrors(getFieldErrors('enrolmentForm', 'altDOB')) }}
                                    </div>
                                </div>
                            </div>
                            <div class="columns">
                                <div class="column is-6">
                                    <label class="label">National ID</label>
                                </div>
                                <div class="column is-6">
                                        {{ textField('altNationalId', enrolmentForm.altNationalId, 1, 100, true, null) }}
                                </div>
                            </div>
                            <div class="columns">
                                <div class="column">
                                    <button id="alt-modal-btn" class="button is-primary modal-button" data-target="modal" aria-haspopup="true">Take picture</button>
                                </div>
                                <div class="column">
                                    <div class="file">
                                        <label class="file-label">
                                            <input class="file-input" type="file" accept="image/*" name="alt-photo" onchange="loadAltFile(event)">
                                            <span class="file-cta">
                                              <span class="file-icon">
                                                <i class="fas fa-upload"></i>
                                              </span>
                                              <span class="file-label">
                                                Choose a file…
                                              </span>
                                            </span>
                                        </label>
                                    </div>
                                </div>



                            </div>
                        </div>
                    </div>

                </div>


                <!-- School confirmation -->
                <div class="card mt-5">
                    <header class="card-header">
                        <p class="card-header-title">School Confirmation</p>
                    </header>
                    <table class="table dataTable is-narrow is-striped is-hoverable">
                        <thead>
                        <tr>
                            <th>Name of child</th>
                            <th>HH Member Code</th>
                            <th>Current School</th>
                            <th>Education Level</th>
                            <th>Grade</th>
                            <th>Select School</th>
                        </tr>
                        </thead>
                        <tbody>
                                {% for child in children %}
                            <tr>
                                <td>{{ child.getFullName }}</td>
                                <td>ML-{{ child.individualId }}</td>
                                <td>{{ child.schoolName}}</td>
                                <td class="control">
                                    <select id="el-{{ child.id }}" class="input" onchange="handleEduLevel(this);">
                                            <option disabled="disabled" selected="selected">Select Option</option>
                                            {% for el in educationLevel %}
                                            <option value="{{ el.code }}">{{ el.name() }}</option>
                                            {% endfor %}
                                    </select>
                                </td>
                                <td class="control">
                                    <select  id="gl-{{ child.id }}" class="input" onchange="saveGrade(this)">
                                            <option disabled="disabled" selected="selected" >Select Option</option>
{#                                            {% for gl in gradeLevel %}#}
{#                                            <option value="{{ gl.code }}">{{ gl.name() }}</option>#}
{#                                            {% endfor %}#}
                                    </select>
                                </td>
                                <td class="columns">
                                    <div class="column">
                                        <input class="input" id="sch-{{ child.id }}" disabled/>
                                    </div>

                                    <div class="column">
                                        <button class="button" id="sc-{{ child.id }}" onclick="openSchModal(this)">
                                            <span class="icon is-small">
                                              <i class="fas fa-bold"></i>
                                            </span>
                                        </button>
                                    </div>

                                </td>
                            </tr>
                                {% endfor %}
                        </tbody>
                    </table>
                </div>

                <div class="mt-5">
                    <button id="sendData" class="button is-primary" onclick="sendData()">save</button>
                </div>

                <div id="cameraModal" class="modal">
                    <div class="modal-background"></div>
                    <div id="camera-content" class="modal-content">
{#                        <p class="image is-4by3">#}
{#                            <img src="https://bulma.io/images/placeholders/1280x960.png" alt="">#}
{#                        </p>#}
                        <main id="webcam-app">
                            <!--
                               <div class="form-control webcam-start" id="webcam-control">
                                   <label class="form-switch">
                                       <input type="checkbox" id="webcam-switch">
                                       <i></i>
                                       <span id="webcam-caption">Click to Start Camera</span>
                                   </label>

                               <button id="cameraFlip" class="btn d-none"></button>
                               </div>
                            -->
                            <div id="errorMsg" class="col-12 col-md-6 alert-danger d-none">
                                Failed to start camera, please allow permission to access camera. <br />
                                If you are browsing through social media built in browsers, you would need to open the page in Safari
                                (iPhone)/ Chrome (Android)
                                <button id="closeError" class="btn btn-primary ml-3">OK</button>
                            </div>
                            <div class="md-modal md-effect-12">
                                <div id="app-panel" class="app-panel md-content row p-0 m-0">
                                    <div id="webcam-container" class="webcam-container columns d-none p-0 m-0">
                                        <div class="column">
                                            <video id="webcam" autoplay playsinline width="640" height="480"></video>
                                        </div>
                                        <div class="column">
                                            <canvas id="canvas" class="d-none"></canvas>
                                        </div>

                                        <div class="flash"></div>
                                        <audio id="snapSound" src="/assets/js/vendor/webcam-easy/audio/snap.wav" preload="auto"></audio>
                                    </div>
                                    <div id="cameraControls" class="cameraControls">
                                        <!--
                                            <a href="#" id="exit-app" title="Exit App" class="d-none"><i
                                                    class="material-icons">exit_to_app</i></a>
                                                    -->
                                        <a href="#" id="take-photo" title="Take Photo"><i class="material-icons">camera_alt</i></a>
                                        <a href="#" id="download-photo"  title="Save Photo"
                                           class="d-none"><i class="material-icons">file_download</i></a>
                                        <a href="#" id="resume-camera" title="Resume Camera" class="d-none"><i
                                                class="material-icons">camera_front</i></a>
                                    </div>
                                </div>
                            </div>
                            <div class="md-overlay"></div>
                        </main>



                    </div>
                    <button id="modalCloseBtn" class="modal-close is-large" aria-label="close"></button>
                </div>

                <!-- school confirmation modal -->
                <div id="modalSchool" class="modal">
                    <div class="modal-background"></div>
                    <div class="modal-card">
                        <header class="modal-card-head">
                            <p class="modal-card-title">school confirmation</p>
                            <button id="schModalClose" class="delete" aria-label="close"></button>
                        </header>
                        <section class="modal-card-body">
                            <table id="dataTable2" class="table dataTable is-narrow is-striped is-hoverable">
{#                                <thead>#}
{#                                <tr>#}
{#                                    <th>Name</th>#}
{#                                    <th>Code</th>#}
{#                                    <th>Education Level</th>#}
{#                                    <th>District</th>#}
{#                                    <th>Education Zone</th>#}
{#                                    <th></th>#}
{#                                </tr>#}
{#                                </thead>#}
{#                                <tbody>#}
{#                                    {% for sch in schools %}#}
{#                                    <tr>#}
{#                                        <td id="co-{{ sch.id }}">{{ sch.name }}</td>#}
{#                                        <td>{{ sch.code }}</td>#}
{#                                        <td>{{ sch.educationLevel }}</td>#}
{#                                        <td>{{ sch.districtName }}</td>#}
{#                                        <td>{{ sch.educationZone }}</td>#}
{#                                        <td>#}
{#                                            <input id="bt-{{ sch.id }}" type="radio" name="answer" onclick="handleSchSelect(this);" value="{{ sch.id }}">#}
{#                                        </td>#}
{#                                    </tr>#}
{#                                    {% endfor %}#}


{#                                </tbody>#}
                            </table>
                        </section>
                        <footer class="modal-card-foot">
                            <button id="saveSch" class="button is-success">Save</button>
                            <button id="cancelSch" class="button">Cancel</button>
                        </footer>
                    </div>
{#                    <button id="modalSchoolCloseBtn" class="modal-close is-large" aria-label="close"></button>#}
                </div>

            </div>
        </div>
    </div>
    {% endblock %}
    {% block headerScripts %}
        <link rel="stylesheet" type="text/css" href="/assets/css/vendor/webcam-easy/webcam.css"/>
        <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    {% endblock %}
    {% block footerScripts %}
    <script src="/assets/js/vendor/webcam-easy/jquery.min.js" type="text/javascript"></script>
    <script src="/assets/js/vendor/webcam-easy/webcam-easy.js" type="text/javascript"></script>
    <script src="/assets/js/vendor/webcam-easy/app.js" type="text/javascript"></script>
        <script>
            var parent = "{{ parent }}";
            var returnUrl = "{{ returnUrl }}";


            var isNonMember = 0;
            var householdId = "{{ details.householdId }}";
            var enrolledChildren =[];
            var schoolsList = [];
            var schoolsTableList = [];
            var hasAlternate = 0;

             window.hideSelectedOption = function(el,selectVal){
                  $("#"+el+" option[value='"+selectVal+"']").hide();
                  $("#"+el+" option[value!='"+selectVal+"']").show();
            }
        </script>
    <script>
        (function(){
            var educationLevelList = [];


            var primaryGrades = [
            {id:"1",name:"Standard 1"},
            {id:"2",name:"Standard 2"},
            {id:"3",name:"Standard 3"},
            {id:"4",name:"Standard 4"},
            {id:"5",name:"Standard 5"},
            {id:"6",name:"Standard 6"},
            {id:"7",name:"Standard 7"},
            {id:"8",name:"Standard 8"}
            ]

            var secondaryGrades = [
            {id:"9",name:"Form 1"},
            {id:"10",name:"Form 2"},
            {id:"11",name:"Form 3"},
            {id:"12",name:"Form 4"},
            ]

            var otherGrade =[{id:"13",name:"Other"}]

            window.removeOptions = function (selectElement) {
               var i, L = selectElement.options.length - 1;
               for(i = L; i >= 1; i--) {
                  selectElement.remove(i);
               }
            }

            window.populateGradeLevel = function(sender,level){
                var langArray = [];
                if(level == 2){
                    langArray = primaryGrades;
                }else if(level == 3){
                    langArray = secondaryGrades;
                }else{
                    langArray = otherGrade;
                }
                removeOptions(sender);

              //for(element in langArray)
              langArray.forEach((e)=>
                {
                   var opt = document.createElement("option");
                   opt.value= e.id;
                   opt.innerHTML = e.name; // whatever property it has

                   // then append it to the select element
                   sender.appendChild(opt);

                })
            }

            {% for ed in educationLevel %}
                 educationLevelList.push({code:"{{ ed.code }}", name:"{{ ed.name() }}"})
            {% endfor %}

            window.getEducationLevelName = function(id){
                var eL = educationLevelList.find((e)=> e.code == id);
                return eL.name;
            }

             {% for sch in schools %}
                 var tmpSch = {id:"{{ sch.id }}",name:"{{ sch.name }}", code:"{{ sch.code }}", educationLevel:getEducationLevelName("{{ sch.educationLevel }}"),educationZone:"{{ sch.educationZone }}",district:"{{ sch.districtName }}",eduLevel:"{{ sch.educationLevel }}"};
                 var tmpSchSimple = {id:"{{ sch.id }}",name:"{{ sch.name }}", code:"{{ sch.code }}", educationLevel:getEducationLevelName("{{ sch.educationLevel }}"),educationZone:"{{ sch.educationZone }}",district:"{{ sch.districtName }}"};
                 schoolsList.push(tmpSch);
                 schoolsTableList.push(tmpSchSimple);


             {% endfor %}

             console.log(schoolsList);

            var currentSelectedChild = {id:"",sch:"",co:"",level:""};

            const mainGender = document.querySelector('#mainGender');
            const altGender = document.querySelector('#altGender');
            const mainDOB = document.querySelector('#mainDOB');
            const altDOB = document.querySelector('#altDOB');
            const altNationalId = document.querySelector('#altNationalId');
            document.querySelector('#altReceiver').disabled = true;

            window.enableAltFields = function(){
                altGender.disabled = false;
                altDOB.disabled = false;
                altNationalId.disabled = false;
            }

            window.clearAltFields = function(){
                altGender.value = "";
                altDOB.value = "";
                altNationalId.value = "";
           }


            window.disableFields = function(){
                mainGender.disabled = true;
                altGender.disabled = true;
                mainDOB.disabled = true;
                altDOB.disabled = true;
                altNationalId.disabled = true;
            }

            disableFields();
           // modal
            const mainModalBtn = document.querySelector('#modal-btn');
            const altModalBtn = document.querySelector('#alt-modal-btn');
            const modalCloseBtn = document.querySelector('#modalCloseBtn');
            const modalBg = document.querySelector('.modal-background');
            const modal = document.querySelector('#cameraModal');
            const schModalBtn = document.querySelector('#sch-modal-btn');
            const schModal = document.querySelector('#modalSchool');
            const schModalClose = document.querySelector('#schModalClose');
            const cancelSch = document.querySelector('#cancelSch');
            const saveSch = document.querySelector('#saveSch');
            const hasAltBtn = document.querySelector('#hasAlt');

            mainModalBtn.addEventListener('click', () => {
              modal.classList.add('is-active');
              receiver = 1;
              webcam.start()
                    .then(result => {
                        cameraStarted();
                        console.log("webcam started");
                    })
                    .catch(err => {
                        displayError();
                        console.log(err);
                    });
            });

            altModalBtn.addEventListener('click', () => {
              modal.classList.add('is-active');
              receiver = 2;
              webcam.start()
                    .then(result => {
                        cameraStarted();
                        console.log("webcam started");
                    })
                    .catch(err => {
                        displayError();
                        console.log(err);
                    });
            })

            window.closeModal = function(){
              modal.classList.remove('is-active');
              cameraStopped();
              webcam.stop();
              console.log("webcam stopped");
              exitCamera();
            }

            document.getElementById('altCard').style.display = 'none';
            hasAltBtn.addEventListener('click',function(){
                if(this.checked){
                     hasAlternate = 1;
                     document.getElementById('altCard').style.display = '';
                }else{
                     hasAlternate = 0;
                    document.getElementById('altCard').style.display = 'none';
                }
            });

            window.closeSchModal = function(){
                schModal.classList.remove('is-active');
                currentSelectedChild.id = "";
                currentSelectedChild.sch = "";
                currentSelectedChild.co = "";
                currentSelectedChild.level = "";
                schoolsTableList = schoolsList;
            }

            schModalClose.addEventListener('click', () => {
              closeSchModal();
            })

            cancelSch.addEventListener('click', () => {
              closeSchModal();
              })

            modalBg.addEventListener('click', () => {
              closeModal();
            })

            modalCloseBtn.addEventListener('click', () => {
               closeModal();
            })

            const dataTable = new simpleDatatables.DataTable("#dataTable2", {
                searchable: true,
                fixedHeight: false,
                columns:[
                    // Hide the sixth column
                    { select: 0, hidden: true },
                    {
                        select: 5,
                        render: function(data, cell, row) {

                            return data + "<input id='bt-"+row.dataIndex+"' class='ml-3' type='radio' name='answer' onclick='handleSchSelect("+row.dataIndex+");' >";

                        }
                    }
                ],
                data:{
                    "headings":["id","Name","Code","Education Level","District","Education Zone"],
                    "data":  schoolsTableList.map(item => Object.values(item))
                }
            })

            window.openSchModal = function(btn){
                var elementSelected = btn.id;
                const elementArray = elementSelected.split("-",2);
                currentSelectedChild.id = elementArray[1];
                schModal.classList.add('is-active');
            }

           document.getElementById('altFieldFirst').style.display = 'none';
           document.getElementById('altFieldLast').style.display = 'none';


           window.handleClick = function(myRadio) {
                if(myRadio.value == 1){
                    isNonMember = 0;
                      document.getElementById('altMember').style.display = '';
                      document.getElementById("altDiv").classList.add("select");
                      document.getElementById('altFieldLast').style.display = 'none';
                      document.getElementById('altFieldFirst').style.display = 'none';
                      disableFields();
                      hideSelectedOption("mainReceiver",0);
                }else{
                    isNonMember = 1;
                    document.getElementById('altMember').style.display = 'none';
                    document.getElementById("altDiv").classList.remove("select");
                    document.getElementById('altFieldFirst').style.display = '';
                    document.getElementById('altFieldLast').style.display = '';
                    enableAltFields();
                    clearAltFields();
                    hideSelectedOption("mainReceiver",0);
                }
            }

           window.handleSchSelect = function(sch){
                var id = schoolsTableList[sch].id;
                var tmp = schoolsList.find((e)=> e.id == id);
                console.log("The row"+sch+"");
                console.log("The id now"+id+"");
                currentSelectedChild.sch = id;
                currentSelectedChild.co = id;
                currentSelectedChild.level = tmp.eduLevel;
                console.log(currentSelectedChild);

           }

           window.checkItemExist = function(child){
               var ans = enrolledChildren.findIndex((e) => e.individualId === child);
               return ans;
           }

           window.setSchName = function(){
                    var inputSch = document.querySelector('#sch-'+currentSelectedChild.id);
                    var el = schoolsList.find((e)=> e.id == currentSelectedChild.id );
                    var index = (schoolsList.length > 1) ? currentSelectedChild.co-1 : currentSelectedChild.co;

                    inputSch.value = schoolsList[index].name;

                    if(currentSelectedChild.grade == null){
                        var sender = document.getElementById("gl-"+currentSelectedChild.id);
                        populateGradeLevel(sender,currentSelectedChild.level);
                    }

                    document.getElementById("el-"+currentSelectedChild.id).value = currentSelectedChild.level;
           }

           window.saveGrade = function(btn){
                var elementSelected = btn.id;
                const elementArray = elementSelected.split("-",2);
                var selectedId = elementArray[1];
                console.log(selectedId);
                console.log(enrolledChildren);
                var res = checkItemExist(selectedId);
                if(res == -1){
                    enrolledChildren.push({individualId:selectedId,grade:btn.selectedOptions[0].value});
                }else{
                    enrolledChildren[res].grade = btn.selectedOptions[0].value;
                }
           }

           saveSch.addEventListener('click',function(){
                if(currentSelectedChild.id !="" && currentSelectedChild.sch !=""){
                    var gradeLevel = document.getElementById("gl-"+currentSelectedChild.id).value;
                     if(enrolledChildren.length > 0){
                          var res = checkItemExist(currentSelectedChild.id);
                          if(res == -1 ){
                                enrolledChildren.push({individualId:currentSelectedChild.id,
                                                       schoolId:currentSelectedChild.sch,
                                                       householdId:householdId,
                                                       educationLevel:currentSelectedChild.level,

                                                       status:0
                                                       });
                                setSchName();
                                closeSchModal();
                          }else{
                                enrolledChildren[res].sch = currentSelectedChild.sch;
                                enrolledChildren[res].householdId = householdId;
                                enrolledChildren[res].educationLevel = currentSelectedChild.level;
                                enrolledChildren[res].status = 0;
                                setSchName();
                                closeSchModal();
                          }
                     }else{
                        enrolledChildren.push({individualId:currentSelectedChild.id,
                                                       schoolId:currentSelectedChild.sch,
                                                       householdId:householdId,
                                                       educationLevel:currentSelectedChild.level,

                                                       status:0
                                                       });
                        setSchName();
                        closeSchModal();
                     }
                }else{
                    alert("Please, select school to save!");
                }
           })

            var individualsLists = [];

            {% for ind in individuals %}
                individualsLists.push({id:"{{ ind.id }}",
                                        fullName:"{{ ind.getFullName }}",
                                        gender:"{{ ind.gender }}",
                                        dob:"{{ ind.dateOfBirth }}",
                                        firstName:"{{ ind.firstName }}",
                                        lastName:"{{ ind.lastName }}",
                                        nationalId:"{{ ind.individualId }}"})
            {% endfor %}

              window.setIndividualDetails = function(sender, receiver){
                var individualId = sender.selectedOptions[0].value;
                var indv = individualsLists.find(({ id }) => id === individualId );
                if(indv){
                    if(receiver == "main"){
                        document.getElementById('mainGender').value = (indv.gender == "Male") ? 1 : 2 ;
                        document.getElementById('mainDOB').value = indv.dob;
                        //document.getElementById('mainFirstName').value = indv.firstName;
                        //document.getElementById('mainLastName').value = indv.lastName;
                        document.getElementById('mainNationalId').value = indv.nationalId;
                    }else{
                        document.getElementById('altGender').value = (indv.gender == "Male") ? 1 : 2 ;
                        document.getElementById('altDOB').value = indv.dob;
                        //document.getElementById('altFirstName').value = indv.firstName;
                        //document.getElementById('altLastName').value = indv.lastName;
                         document.getElementById('altNationalId').value = indv.nationalId;
                    }
                 }
              };

             window.loadMainFile = function(event) {
                var reader = new FileReader();
                reader.onload = function(){
                  var output = document.getElementById('main-photo');
                  output.src = reader.result;
                };
                reader.readAsDataURL(event.target.files[0]);
              };

             window.loadAltFile = function(event) {
                var reader = new FileReader();
                reader.onload = function(){
                  var output = document.getElementById('alt-photo');
                  output.src = reader.result;
                };
                reader.readAsDataURL(event.target.files[0]);
              };

            window.handleEduLevel = function(event){
                //schoolsTableList.pop();
                console.log(event.id);
                console.log(schoolsTableList);
                var rowsCount =[];

                var elementSelected = event.selectedOptions[0].value;
                //const elementArray = elementSelected.split("-",2);
                //var selectedId = elementArray[1];


                for (let i = 0; i < schoolsTableList.length; i++) {
                  rowsCount.push(i);
                }

                // remove the data
                dataTable.rows().remove(rowsCount);

                schoolsTableList = schoolsList;

                schoolsTableList = schoolsList.filter((e)=> e.eduLevel == elementSelected);

                let newRows = {  data: schoolsTableList.map(item => Object.values(item)) };

                //add filtered
                // dataTable.rows().add(newRows);
                dataTable.insert(newRows);


                var elementId = event.id;
                const elementArray = elementId.split("-",2);

                var sender = document.getElementById("gl-"+elementArray[1]);
                populateGradeLevel(sender,elementSelected);
            }



            //if edit page load data
           if(parent == 1){
            document.getElementById("sendData").disabled = true;

            var mainRec = "{{ enrollmentForm.mainReceiver }}";
            var altRe = "{{ enrollmentForm.altReceiver }}";
            var altDate = "{{ enrollmentForm.altDOB }}";
            var altFirstN = "{{ enrollmentForm.altFirstName }}";
            var altLastN = "{{ enrollmentForm.altLastName }}";
            var altGe = "{{ enrollmentForm.altGender }}";
            var nonHousehold = "{{ enrollmentForm.nonHouseholdMember }}";
            var household = "{{ enrollmentForm.householdId }}";
            var hasAlter = "{{ enrollmentForm.hasAlternate }}";
            var altNational = "{{ enrollmentForm.altNationalId }}";
            var altPhoto = "{{ enrollmentForm.altPhoto }}";
            var mainPhoto = "{{ enrollmentForm.mainPhoto }}";

            var schoolEnrolledList = [];

             {% for ed in schoolEnrolled %}
                 schoolEnrolledList.push({id:"{{ ed.id }}", householdId:"{{ ed.householdId }}",individualId:"{{ ed.individualId }}",educationLevel:"{{ ed.educationLevel }}",grade:"{{ ed.grade }}",schoolId:"{{ ed.schoolId }}"})
            {% endfor %}


            schoolEnrolledList.forEach((e)=>{
                    var eduOption = document.getElementById("el-"+e.individualId).value = e.educationLevel;
                   //handleEduLevel.
                    var sender = document.getElementById("gl-"+e.individualId);
                    populateGradeLevel(sender,e.educationLevel);
                    sender.value = e.grade;
                    var tmp = schoolsList.find((p)=> p.id == e.schoolId);

                    document.getElementById("sch-"+e.individualId).value = tmp.name;

            })

            //setup mainReceiver
            var mR = document.getElementById('mainReceiver');
            mR.value = mainRec;
            setIndividualDetails(mR,"main");
            if(mainPhoto != null){
                document.getElementById('main-photo').src = mainPhoto;
            }


            //if household has alternate receiver
            if(hasAlter == 1){
                hasAltBtn.click();
                if(altPhoto != null){
                    document.getElementById('alt-photo').src = altPhoto;
                }

                if(nonHousehold == 1){
                    var houseBtn = document.getElementById('householdMemberBtn');
                    houseBtn.checked = false;
                    var nonHouseBtn = document.getElementById('nonHouseholdMemberBtn');
                    nonHouseBtn.click();

                    document.getElementById("altFirstName").value = altFirstN;
                     document.getElementById("altLastName").value = altLastN;
                     document.getElementById("altDOB").value = altDate;
                     document.getElementById("altGender").value = altGe;
                     document.getElementById("altNationalId").value = altNational;
                }else{
                    //alternate set selection details
                    var aR = document.getElementById('altReceiver');
                    aR.value = altRe;
                    setIndividualDetails(aR,"alt");
                }

            }
        }




        })();
    </script>
    <script>

      mainReceiver.onchange = function(){
            setIndividualDetails(this,"main")
            var selectValue = this.value;
            if(selectValue != ''){
                hideSelectedOption("altReceiver",selectValue);
                $( "#altReceiver" ).prop( "disabled", false );
            }
        };

        altReceiver.onchange = function(){
            setIndividualDetails(this,"alt")
            var selectValue = this.value;
            if(selectValue != ''){
              hideSelectedOption("mainReceiver",selectValue);
            }
        };


        function base64ToBlob(base64, mime)
        {
            mime = mime || '';
            var sliceSize = 1024;
            var byteChars = window.atob(base64);
            var byteArrays = [];

            for (var offset = 0, len = byteChars.length; offset < len; offset += sliceSize) {
                var slice = byteChars.slice(offset, offset + sliceSize);

                var byteNumbers = new Array(slice.length);
                for (var i = 0; i < slice.length; i++) {
                    byteNumbers[i] = slice.charCodeAt(i);
                }

                var byteArray = new Uint8Array(byteNumbers);

                byteArrays.push(byteArray);
            }

            return new Blob(byteArrays, {type: mime});
        }

         var __csrfTokenValue = query('meta[name="csrf-token"]').content;


        function sendData(){
             var enrolledSchErrors = [];
             var mainRaw = $("#main-photo").attr("src");
             var altRaw = $("#alt-photo").attr("src");

             if(mainRaw == "/assets/img/user-svg.svg"){
                alert("Please take picture for main receiver!");
                return;
             }

             if($("#mainReceiver").val() == null){
                alert("Please select main receiver!");
                return;
             }

             var mainRep = mainRaw.replace(/^data:image\/(png|jpg);base64,/, "");
             var mainPhoto = base64ToBlob(mainRep, 'image/png');

            enrolledSchErrors = [];
             if(enrolledChildren.length > 0){
                enrolledChildren.forEach((e)=>{
                    if(e.grade == null){
                        $("#gl-"+e.individualId+"").addClass("is-danger");
                        enrolledSchErrors.push({element:"gl",individual:e.individualId})
                    }
                    if(e.schoolId == null){
                        $("#sch-"+e.individualId+"").addClass("is-danger");
                        enrolledSchErrors.push({element:"sch",individual:e.individualId})
                    }
                })
             }

             if(enrolledSchErrors.length > 0){
                return;
             }

             var jsonDataObj = {
                "householdId" : householdId,
                "mainReceiver": $("#mainReceiver").val(),
                "altReceiver" : $("#altReceiver").val(),
    {#            "mainDOB" : $("#mainDOB").val(),#}
                "altDOB" : $("#altDOB").val(),
    {#            "mainFirstName" : $("#mainFirstName").val(),#}
    {#            "mainLastName" : $("#mainLastName").val(),#}
                "altFirstName" : $("#altFirstName").val(),
                "altLastName" : $("#altLastName").val(),
    {#            "mainGender" : $("#mainGender").val(),#}
                "altGender" : $("#altGender").val(),
                "altNationalId" : $("#altNationalId").val(),
                "nonHouseholdMember": isNonMember,
                "hasAlternate": hasAlternate,
                "schoolEnrollmentForm": enrolledChildren
                };


             var formData = new FormData();
             formData.append('file', mainPhoto);
             if(hasAlternate != 0){
                if(altRaw == "/assets/img/user-svg.svg"){
                     alert("Please take picture for alternate receiver!");
                     return;
                }

                if($("#altReceiver").val() == null){
                      alert("Please select alternate receiver!");
                      return;
                }

                var altRep = altRaw.replace(/^data:image\/(png|jpg);base64,/, "");
                var altPhoto = base64ToBlob(altRep, 'image/png');
                formData.append('altPhoto', altPhoto);
             }
             formData.append("jsondata", JSON.stringify(jsonDataObj));


            $.ajax({
                url: "/targeting/enrolment/enroll",
                type: "POST",
                cache: false,
                enctype: 'multipart/form-data',
                contentType: false,
                processData: false,
                headers: {"X-CSRF-TOKEN": __csrfTokenValue},
                data: formData})
                    .done(function(e){
                        alert('Household enrollment details saved!');
                         location.href = returnUrl;
                    }).fail(function() {
                        alert( "Failed to save enrollment data,try again later or contact system admin!" );
                    });
             }

    </script>
    {% endblock %}