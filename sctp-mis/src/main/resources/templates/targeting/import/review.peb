    {% extends "targeting/import/base" %}

    {% block title %}
        {{ parent() }} | UBR Data Import | {{ importSession.title }} | Review
    {% endblock %}

    {% set canModify = hasRole("ADMINISTRATOR") %}

    {% block contextMenu %}
        {% set useWideContainer = true %}
        <div class="context-nav-container">
            <div class="buttons level">
                <a href="/data-import" class="button is-danger is-left">
                    <span class="icon-text">
                        <span class="icon">
                            <i class="fa fa-chevron-left"></i>
                        </span>
                        <span>Back</span>
                    </span>
                </a>
                {% if canModify %}
                <div class="dropdown is-hoverable is-right">
                    <form id="mergeForm"
                          action="/data-import/{{ importSession.id }}/{{ importSession.dataSource }}/merge"
                          method="post">
                        {{ csrf(_csrf) }}
                        <input name="id" value="{{ importSession.id }}" type="hidden"/>
                    </form>
                    <a href="/data-import/export-errors/{{ importSession.id }}" class="button is-primary">
                        Export Errors to Excel
                    </a>
                    <button onclick="merge(mergeForm)" class="button is-primary">
                        Finish And Merge
                    </button>
                </div>
                {% endif %}
            </div>
        </div>
    {% endblock %}

    {% block content %}
    <div class="card no-overlap">
        <header class="card-header">
            <p class="card-header-title">{{ importSession.title }} | Data Import Review</p>
        </header>
        <div class="card-content">
            <Data-Import-Review :import-id="{{ importSession.id }}" />
        </div>
    </div>
    {% endblock %}
    {% block footerScripts %}
            <!-- Individual components -->
    <script type="module">
        const App = {
            el: '#vapp',

            mounted() {
                console.log('application mounted. ')
            },

            created() {
                console.log('application created')
            },

            components: {
                'DataImportReview': httpVueLoader('/components/DataImportReview.vue')
            }
        };

        window.addEventListener('load', () => {
            var app = new Vue(App);
        });
    </script>
    {% endblock %}
